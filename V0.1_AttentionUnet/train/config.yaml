# config.yaml (RECOMMENDED RECOVERY SETTINGS)
dataset:
  metadata_path: "/openbayes/home/CharacterRepaint/V0.1_AttentionUnet/scripts/CIRI_syth_metadata.json"
  batch_size: 16
  num_workers: 10
 
model_params:
  image_size: 288
  in_channels: 1
  out_channels: 1
  model_channels: 64         # <-- 使用一个更强的基础通道数
  channel_mult: [1, 2, 4]    # <-- [核心修改] 列表长度为3，代表3层下采样
  num_res_blocks: 2          # <-- 每个块使用2个残差层是标准做法
  groups: 32
  attention_resolutions: [36] # <-- [核心修改] 在最深层(36x36)应用注意力
  attention_head_dim: 8
 
diffusion_params:
  num_timesteps: 100         # <-- 使用一个中等长度的扩散步数
  beta_max: 0.02     # <-- 允许一个合理的噪声水平
 
training_params:
  epochs: 200
  lr: 0.001             # <-- 2e-4 是一个很好的起点
  time_exp: 1.0                # <-- 均匀采样所有时间步
  output_dir: "/openbayes/home/CharacterRepaint/V0.1_AttentionUnet/train_output/012-20250717-调整class_weight[1.0,2.0]" # <-- 新的输出目录
  
  # ---------- 新增和修改的频率控制参数 ----------
  fast_val_freq: 5           # 新增: 控制“快速验证损失 (L_t)”的计算频率（例如，每1个epoch）。
  val_loss_timestep: 95     # 新增: “快速验证损失”中，用于对输入图片加噪声的时间步 't'。如果为0，则不加噪声。
  full_sample_freq: 10     # 修改: 控制完整的去噪采样 (p_sample_loop_restoration)、计算所有图像质量指标 (PSNR, SSIM, F1) 和保存对比图的频率。
  save_checkpoint_freq: 100  # 现有: 控制模型检查点保存频率。
  # ---------------------------------------------
  
  device: "cuda"
 
visualization_params:
  num_samples_to_visualize: 4
  start_timestep: 95     # <-- 保持不变，这已经控制了 p_sample_loop_restoration 的起始时间步。
  